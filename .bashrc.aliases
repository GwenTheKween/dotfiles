
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias l='ls -CF'
alias la='ls -lah'
alias python='python3'
alias vim='echo "wrong editor" && sleep 1 && nvim'
alias vi='echo "wrong editor" && sleep 1 && nvim'
alias ranger='source ranger'
alias gdb='gdb -q'
alias objdump='objdump -w'
alias ranger='source ranger'

alias config='git --git-dir=$HOME/.cfg --work-tree=$HOME'
alias please='sudo $(fc -ln -1)'
alias doc='nvim ~/Documents/journal/$(date -d "this friday" +%Y_%m_%d)'
alias lastdoc='nvim ~/Documents/journal/$(date -d "last friday" +%Y_%m_%d)'
alias nextdoc='nvim ~/Documents/journal/$(date -d "friday+1 week" +%Y_%m_%d)'

function link(){
    ln -s $PWD/"$1" "$2"
}

function cfg(){
    vim ~/."$1"
}

function motion_patch(){
    diff -u <(sed -n 's/^-//p' $1) <(sed -n 's/^\+//p' $1)
}

function update() {
    echo "running full system update"
    if [[ $DISTRO == "fedora" ]]; then
        sudo dnf update -y
    else
        echo "unknown distro"
        echo $distro
        return -1
    fi
    # Checks if flatpak binary exists
    which flatpak >/dev/null
    if [[ $? == 0 ]]; then
	flatpak repair
	flatpak upgrade
	flatpak uninstall --unused
    fi
}

function rpmbuildlocal
{
  MAKEFLAGS= rpmbuild \
    --define "_topdir $PWD" \
    --define "_builddir $PWD" \
    --define "_rpmdir $PWD" \
    --define "_sourcedir $PWD" \
    --define "_specdir $PWD" \
    --define "_srcrpmdir $PWD" \
    --define "_build_name_fmt %%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm" \
    "$@"; rmdir &>/dev/null BUILDROOT;
}

function patch-ping() {
  # Parsing arguments
  local COMMAND="$1"
  local EMAIL="$2"
  local UNDERSTOOD="false"
  if [[ $COMMAND == "start" || $COMMAND == "reset" ]]; then
    UNDERSTOOD="true"
  fi

  # Help text
  if [[ "$#" -eq 0 || "$COMMAND" == "help" || "$UNDERSTOOD" == "false" ]]
  then
    echo "USAGE:"
    echo "  $0 start <email identifier>"
    echo "  $0 reset <email identifier"
    echo
    echo "DESCRIPTION:"
    echo "  add a reminder to ping patches."
    echo "  start reminds you in 2 weeks."
    echo "  reset reminds you in 1 week."
    if [[ "$UNDERSTOOD" == "false" ]]; then
      return 1
    else
      return 0
    fi
  fi

  # Check presence of AT command
  which at >/dev/null
  if [[ $? != 0 ]] ; then
    echo "$0: AT utility is required but not installed on your system."
    echo "And remember to enable atd (sysctl enable atd)."
    return
  fi

  # Amount of weeks to be reminded
  local TIME=""
  if [[ "$COMMAND" == "start" ]]; then
    TIME="2"
  else
    TIME="1"
  fi
  TIME="11 AM + $TIME weeks"
  echo "reminding to ping $EMAIL in $TIME"

  # Run the command.  We test if the following line is in the output
  # Can't open /run/atd.pid to signal atd. No atd running?
  # because this message means that at failed, but still returns 0
  if [[ $(echo 'notify-send "ping: $EMAIL"' | at "$TIME" 2>&1 | grep "Can't open" | wc -c) -ne 0 ]]; then
    echo "Couldn't set the time. Is atd running?"
    return 1
  fi
  return 0
}

function motion-review() {
  # Attempting to parse the arguments
  local FILE="$1"

  # Help text if no arguments or args failed
  if [[ "$#" -eq 0 && ! -f "$FILE" ]]
  then
    echo "USAGE:"
    echo "  $0 <path/to/file>"
    echo
    echo "DESCRIPTION:"
    echo "  print the lines of a code motion patch that differ by more than identation"
    if [[ "$FILE" == "-h" ]]; then
      return 0
    else
      return 1
    fi
  fi

  diff -u <(sed -n 's/^-\s*//p' "$FILE") <(sed -n 's/^+\s*//p' "$FILE")
}

CLANG="CC_FOR_TARGET=clang CXX_FOR_TARGET=clang++"
CLANG17="CC_FOR_TARGET=clang-17 CXX_FOR_TARGET=clang++-17"
CLANG16="CC_FOR_TARGET=clang-16 CXX_FOR_TARGET=clang++-16"
CLANG15="CC_FOR_TARGET=clang-15 CXX_FOR_TARGET=clang++-15"
DISTRO=fedora
